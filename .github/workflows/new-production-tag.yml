name: Increment Version on Merge

on:
  pull_request:
    branches:
      - main
    types:
      - closed

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: '**/bin/Release/net8.0'

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-output

      - name: Test
        run: dotnet test --no-restore --verbosity normal

  tag:
    runs-on: ubuntu-latest
    needs: [build, test]
    if: success()
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Configure Git User
        run: |
          git config --global user.email "greg@xerris.com"
          git config --global user.name "kr0ggg"

      - name: Add New Production Tag
        run: |
          chmod +x .github/workflows/add-new-production-tag.sh
          ./.github/workflows/add-new-production-tag.sh
          
  pack:
    runs-on: ubuntu-latest
    needs: [ build, test, tag ]
    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'
          
      - name: Create packages folder
        run: mkdir ./packages

      - name: Pack
        run: dotnet pack ./src/Xerris.DotNet.Core/Xerris.DotNet.Core.csproj --configuration Release --output ./packages

      - name: List NuGet packages after packing
        run: ls -la ./packages

      - name: Upload NuGet package
        uses: actions/upload-artifact@v4
        with:
          name: nuget-package
          path: ./packages/*.nupkg

  publish:
    runs-on: ubuntu-latest
    needs: [ build, test, tag, pack ]
    steps:
      - uses: actions/checkout@v3

      - name: Download NuGet package
        uses: actions/download-artifact@v4
        with:
          name: nuget-package

      - name: List downloaded NuGet packages
        run: ls -la ./nupkgs

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Publish to NuGet
        run: |
          dotnet nuget push ./nupkgs/*.nupkg \
            --api-key ${{ secrets.NUGET_API_KEY }} \
            --source ${{ secrets.NUGET_SOURCE_URI }} \
            --timeout 360 \
            --skip-duplicate